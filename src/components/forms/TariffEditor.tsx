import React, { useState } from 'react';
import { Card, Input, Button } from '../ui';
import type { Marketplace } from '../../types';

interface TariffEditorProps {
  marketplace: Marketplace;
  currentValues: {
    commission: number;
    logistics: number;
    storage: number;
    advertising: number;
    pickupRate: number;
    returnRate: number;
  };
  onValuesChange: (values: Partial<TariffEditorProps['currentValues']>) => void;
  errors?: Record<string, string>;
  className?: string;
}

export const TariffEditor: React.FC<TariffEditorProps> = ({
  marketplace,
  currentValues,
  onValuesChange,
  errors = {},
  className = ''
}) => {
  const [isCustomMode, setIsCustomMode] = useState(false);
  const [customValues, setCustomValues] = useState(currentValues);

  // –ü—Ä–∏–º–µ–Ω–∏—Ç—å –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞
  const applyPresets = () => {
    const presets = {
      commission: marketplace.defaultValues.commission || 15,
      logistics: marketplace.defaultValues.logistics || 0,
      storage: marketplace.defaultValues.storage || 0,
      advertising: marketplace.defaultValues.advertising || 50,
      pickupRate: marketplace.defaultValues.pickupRate || 70,
      returnRate: marketplace.defaultValues.returnRate || 15
    };
    
    setCustomValues(presets);
    onValuesChange(presets);
    setIsCustomMode(false);
  };

  // –ü—Ä–∏–º–µ–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
  const applyCustomValues = () => {
    onValuesChange(customValues);
  };

  // –°–±—Ä–æ—Å –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  const resetToDefaults = () => {
    const defaults = {
      commission: marketplace.defaultValues.commission || 15,
      logistics: marketplace.defaultValues.logistics || 0,
      storage: marketplace.defaultValues.storage || 0,
      advertising: marketplace.defaultValues.advertising || 50,
      pickupRate: marketplace.defaultValues.pickupRate || 70,
      returnRate: marketplace.defaultValues.returnRate || 15
    };
    
    setCustomValues(defaults);
    onValuesChange(defaults);
  };

  // –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  // const getCategoryRecommendations = (category: string) => {
  //   const range = marketplace.config.commissionRanges?.[category];
  //   if (range) {
  //     return `–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –∫–æ–º–∏—Å—Å–∏—è –¥–ª—è ${category}: ${range.min}% - ${range.max}%`;
  //   }
  //   return null;
  // };

  const updateCustomValue = (field: keyof typeof customValues, value: number) => {
    setCustomValues(prev => ({
      ...prev,
      [field]: value
    }));
  };

  return (
    <Card
      title="–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–∞—Ä–∏—Ñ–æ–≤"
      description={`–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–æ–≤ –¥–ª—è ${marketplace.name}`}
      className={className}
    >
      <div className="space-y-6">
        {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–µ–∂–∏–º–∞ */}
        <div className="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
          <div>
            <h4 className="font-medium text-gray-900">–†–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</h4>
            <p className="text-sm text-gray-600">
              {isCustomMode 
                ? '–†—É—á–Ω–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π' 
                : '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–æ–∫ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞'
              }
            </p>
          </div>
          <Button
            variant={isCustomMode ? 'secondary' : 'primary'}
            onClick={() => setIsCustomMode(!isCustomMode)}
          >
            {isCustomMode ? '–ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–∫–∏' : '–†—É—á–Ω–æ–π –≤–≤–æ–¥'}
          </Button>
        </div>

        {isCustomMode ? (
          // –†–µ–∂–∏–º —Ä—É—á–Ω–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
          <div className="space-y-4">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <Input
                label="–ö–æ–º–∏—Å—Å–∏—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞"
                type="percentage"
                value={customValues.commission}
                onChange={(value) => updateCustomValue('commission', value as number)}
                tooltip="–ü—Ä–æ—Ü–µ–Ω—Ç –∫–æ–º–∏—Å—Å–∏–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –æ—Ç —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞"
                error={errors.commission}
                min={0}
                max={100}
              />

              <Input
                label="–õ–æ–≥–∏—Å—Ç–∏–∫–∞"
                type="currency"
                value={customValues.logistics}
                onChange={(value) => updateCustomValue('logistics', value as number)}
                tooltip="–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –¥–æ –∫–ª–∏–µ–Ω—Ç–∞"
                error={errors.logistics}
                min={0}
              />

              <Input
                label="–•—Ä–∞–Ω–µ–Ω–∏–µ"
                type="currency"
                value={customValues.storage}
                onChange={(value) => updateCustomValue('storage', value as number)}
                tooltip="–°—Ç–æ–∏–º–æ—Å—Ç—å —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞ —Å–∫–ª–∞–¥–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞"
                error={errors.storage}
                min={0}
              />

              <Input
                label="–†–µ–∫–ª–∞–º–∞ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É"
                type="currency"
                value={customValues.advertising}
                onChange={(value) => updateCustomValue('advertising', value as number)}
                tooltip="–ó–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Ä–µ–∫–ª–∞–º—É –≤ —Ä–∞—Å—á–µ—Ç–µ –Ω–∞ –æ–¥–Ω—É –ø—Ä–æ–¥–∞–∂—É"
                error={errors.advertising}
                min={0}
              />

              <Input
                label="–ü—Ä–æ—Ü–µ–Ω—Ç –≤—ã–∫—É–ø–∞"
                type="percentage"
                value={customValues.pickupRate}
                onChange={(value) => updateCustomValue('pickupRate', value as number)}
                tooltip="–ö–∞–∫–æ–π –ø—Ä–æ—Ü–µ–Ω—Ç –∑–∞–∫–∞–∑–æ–≤ –¥–æ—Ö–æ–¥–∏—Ç –¥–æ –≤—ã–∫—É–ø–∞"
                error={errors.pickupRate}
                min={0}
                max={100}
              />

              <Input
                label="–ü—Ä–æ—Ü–µ–Ω—Ç –≤–æ–∑–≤—Ä–∞—Ç–æ–≤"
                type="percentage"
                value={customValues.returnRate}
                onChange={(value) => updateCustomValue('returnRate', value as number)}
                tooltip="–ü—Ä–æ—Ü–µ–Ω—Ç —Ç–æ–≤–∞—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è"
                error={errors.returnRate}
                min={0}
                max={100}
              />
            </div>

            {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º */}
            {marketplace.config.commissionRanges && (
              <div className="p-4 bg-blue-50 rounded-lg">
                <h5 className="font-medium text-blue-900 mb-2">üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:</h5>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-2 text-sm">
                  {Object.entries(marketplace.config.commissionRanges).map(([category, range]) => (
                    <div key={category} className="flex justify-between">
                      <span className="text-blue-700 capitalize">{category}:</span>
                      <span className="text-blue-800 font-medium">
                        {range.min}% - {range.max}%
                      </span>
                    </div>
                  ))}
                </div>
              </div>
            )}

            <div className="flex gap-3">
              <Button variant="primary" onClick={applyCustomValues}>
                –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
              </Button>
              <Button variant="secondary" onClick={resetToDefaults}>
                –°–±—Ä–æ—Å–∏—Ç—å –∫ —É–º–æ–ª—á–∞–Ω–∏—è–º
              </Button>
            </div>
          </div>
        ) : (
          // –†–µ–∂–∏–º –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–æ–∫
          <div className="space-y-4">
            <div className="p-4 bg-green-50 rounded-lg border border-green-200">
              <h4 className="font-medium text-green-900 mb-3">
                –¢–µ–∫—É—â–∏–µ –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–ª—è {marketplace.name}:
              </h4>
              <div className="grid grid-cols-2 md:grid-cols-3 gap-3 text-sm">
                <div className="flex justify-between">
                  <span className="text-green-700">–ö–æ–º–∏—Å—Å–∏—è:</span>
                  <span className="text-green-800 font-medium">{currentValues.commission}%</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-green-700">–õ–æ–≥–∏—Å—Ç–∏–∫–∞:</span>
                  <span className="text-green-800 font-medium">‚ÇΩ{currentValues.logistics}</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-green-700">–•—Ä–∞–Ω–µ–Ω–∏–µ:</span>
                  <span className="text-green-800 font-medium">‚ÇΩ{currentValues.storage}</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-green-700">–†–µ–∫–ª–∞–º–∞:</span>
                  <span className="text-green-800 font-medium">‚ÇΩ{currentValues.advertising}</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-green-700">% –≤—ã–∫—É–ø–∞:</span>
                  <span className="text-green-800 font-medium">{currentValues.pickupRate}%</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-green-700">% –≤–æ–∑–≤—Ä–∞—Ç–æ–≤:</span>
                  <span className="text-green-800 font-medium">{currentValues.returnRate}%</span>
                </div>
              </div>
            </div>

            <div className="text-center">
              <Button variant="primary" onClick={applyPresets}>
                –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–∫–∏
              </Button>
            </div>
          </div>
        )}

        {/* –û–±—â–∏–µ –æ—à–∏–±–∫–∏ */}
        {errors.general && (
          <div className="p-3 bg-red-50 border border-red-200 rounded-lg">
            <p className="text-red-800 text-sm">‚ö†Ô∏è {errors.general}</p>
          </div>
        )}
      </div>
    </Card>
  );
};

export default TariffEditor;
